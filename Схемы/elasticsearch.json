{
  "index_name": "materials",
  "description": "Индекс для хранения учебных материалов лекций с полнотекстовым поиском на русском языке",
  "mappings": {
    "properties": {
      "id": {
        "type": "integer",
        "description": "Уникальный идентификатор материала"
      },
      "id_lect": {
        "type": "integer",
        "description": "Идентификатор лекции, к которой относится материал"
      },
      "name": {
        "type": "text",
        "analyzer": "russian",
        "fields": {
          "keyword": {
            "type": "keyword"
          }
        },
        "description": "Название учебного материала"
      },
      "lecture_text": {
        "type": "text",
        "analyzer": "russian",
        "description": "Полный текст лекции/материала для полнотекстового поиска"
      }
    }
  },
  "settings": {
    "analysis": {
      "analyzer": {
        "russian": {
          "tokenizer": "standard",
          "filter": ["lowercase", "russian_stop", "russian_stemmer"]
        }
      },
      "filter": {
        "russian_stop": {
          "type": "stop",
          "stopwords": "_russian_"
        },
        "russian_stemmer": {
          "type": "stemmer",
          "language": "russian"
        }
      }
    }
  },
  "sample_data": [
    {
      "id": 1,
      "id_lect": 1,
      "name": "Введение в архитектуру ПО",
      "lecture_text": "Архитектура программного обеспечения - это фундаментальная организация системы, воплощенная в её компонентах, их отношениях друг с другом и с окружением, а также принципы, определяющие проектирование и эволюцию системы. Использование правильных архитектурных паттернов критически важно для создания масштабируемых приложений."
    },
    {
      "id": 2,
      "id_lect": 1,
      "name": "Принципы SOLID",
      "lecture_text": "SOLID — это акроним пяти основных принципов объектно-ориентированного программирования и проектирования: Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, Dependency Inversion. Эти принципы помогают создавать более понятный, гибкий и поддерживаемый код."
    }
  ]
}